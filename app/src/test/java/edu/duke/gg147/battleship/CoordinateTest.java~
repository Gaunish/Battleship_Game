package edu.duke.gg147.battleship;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

public class CoordinateTest {
  @Test
  public void test_Cood() {
    Coordinate cood = new Coordinate(3, 5);
    assertEquals(3, cood.get_row());
    assertEquals(5, cood.get_col());
  }

   @Test
   public void test_equals() {
     Coordinate c1 = new Coordinate(1, 2);
     Coordinate c2 = new Coordinate(1, 2);
     Coordinate c3 = new Coordinate(1, 3);
     Coordinate c4 = new Coordinate(3, 2);
     assertEquals(c1, c1);   //equals should be reflexsive
     assertEquals(c1, c2);   //different objects bu same contents
     assertNotEquals(c1, c3);  //different contents
     assertNotEquals(c1, c4);
     assertNotEquals(c3, c4);
     assertNotEquals(c1, "(1, 2)"); //different types
   }

   @Test
   public void test_to_string() {
     Coordinate c1 = new Coordinate(3, 2);
     Coordinate c2 = new Coordinate(2, 2);
     String s1 = "(3, 2)";
     String s2 = "(2, 2)";
     assertEquals(c1.toString(), s1);
     assertEquals(c2.toString(), s2);
   }

   @Test
   public void test_hashCode() {
     Coordinate c1 = new Coordinate(1, 2);
     Coordinate c2 = new Coordinate(1, 2);
     Coordinate c3 = new Coordinate(0, 3);
     Coordinate c4 = new Coordinate(2, 1);
     assertEquals(c1.hashCode(), c2.hashCode());
     assertNotEquals(c1.hashCode(), c3.hashCode());
     assertNotEquals(c1.hashCode(), c4.hashCode());
   }

}
